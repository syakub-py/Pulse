{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "standard-with-typescript",
        "plugin:react/recommended"
    ],
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "filenames",
        "react-hooks"
    ],
    "rules": {
        "indent": [
            "error",
            "tab"
        ],
        "linebreak-style": [
            "error",
            "windows"
        ],
        "quotes": [
            "error",
            "double"
        ],
        "semi": [
            "error",
            "never"
        ],
        "no-empty": [
            "error",
            {
                "allowEmptyCatch": true
            }
        ],
        "eol-last": [
            "error",
            "always"
        ],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "eqeqeq": "error",
        "space-infix-ops": "warn",
        "space-before-blocks": "error",
        "keyword-spacing": [
            "error",
            {
                "before": true,
                "after": true
            }
        ],
        "no-trailing-spaces": "error",
        "prefer-const": "error",
        "@typescript-eslint/explicit-function-return-type": "warn",
        "require-await": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "no-eval": "error",
        "no-duplicate-imports": "error",
        "no-var": "error",
        "prefer-spread": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "max-depth": [
            "warn",
            3
        ],
        "no-nested-ternary": "error",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "complexity": [
            "warn",
            9
        ],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "filenames/match-regex": [
            "error",
            "^[a-z-]+$",
            true
        ],
        "@typescript-eslint/no-non-null-assertion": "error",
        "react/react-in-jsx-scope": "off",
        "react/jsx-uses-react": "off",
        "react/prop-types": "off",
        "max-params": [
            "warn",
            100
        ],
        "max-lines-per-function": [
            "warn",
            {
                "max": 90,
                "skipBlankLines": true,
                "skipComments": true
            }
        ],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "variable",
                "format": [
                    "camelCase"
                ],
                "filter": {
                    "regex": "^(EcalendarContext|SCREEN_TIME)$",
                    "match": false
                }
            },
            {
                "selector": "function",
                "format": [
                    "camelCase",
                    "PascalCase"
                ]
            },
            {
                "selector": "parameter",
                "format": [
                    "camelCase"
                ],
                "filter": {
                    "regex": "^(EcalendarContext|SCREEN_TIME)$",
                    "match": false
                }
            },
            {
                "selector": "typeLike",
                "format": [
                    "PascalCase"
                ]
            }
        ],
        "@typescript-eslint/ban-types": "off",
        "react/display-name": "off",
        // Hook rules
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "react/jsx-no-constructed-context-values": "error"
    },
    "overrides": [
        {
            "files": [
                "*.d.ts"
            ],
            "rules": {
                "filenames/match-regex": "off"
            }
        },
        {
            "files": [
                "*.jsx",
                "*.tsx",
                "./src/services/*.ts"
            ],
            "rules": {
                "@typescript-eslint/explicit-function-return-type": "off"
            }
        },
        {
            "files": [
                "*.tsx"
            ],
            "rules": {
                "@typescript-eslint/no-floating-promises": "off"
            }
        },
        {
            "files": [
                "*.ts",
                "*.tsx"
            ],
            "parserOptions": {
                "project": "./tsconfig.json"
            }
        }
    ]
}